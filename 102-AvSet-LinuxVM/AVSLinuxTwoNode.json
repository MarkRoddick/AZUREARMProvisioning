{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VirtualMachineNameFirst": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNameSecond": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VMadminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "7.3",
      "allowedValues": [
        "6.9",
        "7.3"
      ],
      "metadata": {
        "description": "The Linux version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D1_v2",
      "metadata": {
        "description": "VMsize"
      }
    },
    "VirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Existing virtualNetworkName"
      }
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "VirtualMachineNICNameFirst": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "VirtualMachineNICNameSecond": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ]
    },
    "StorageAccountNameFirst": {
      "type": "string",
      "metadata": {
        "description": "Name  for storageaccount."
      }
    },
    "StorageAccountNameSecond": {
      "type": "string",
      "metadata": {
        "description": "Name  for storageaccount."
      }
    },
    "numDataDisks": {
      "type": "int",
      "maxValue": 16,
      "metadata": {
        "description": "This parameter allows the user to select the number of disks they want"
      }
    },
    "SizeOfDataDisksInGB": {
      "type": "string",
      "defaultValue": "1023",
      "allowedValues": [
        "128",
        "512",
        "1023"
      ],
      "metadata": {
        "description": "Size of datadisks"
      }
    },
    "DiskCaching": {
      "type": "string",
      "allowedValues": [
        "None",
        "ReadOnly",
        "ReadWrite"
      ]
    },
    "Location": {
      "type": "string",
      "allowedValues": [
        "East Asia",
        "East US 2",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of Virtual machine"
      }
    },

    "AvailabilitysetName": {
      "type": "string",
      "minLength": 1
    },
    "LoadBalancerName": {
      "type": "string"
    },
    "LoadBalancerProtocol": {
      "type": "string"
    },
    "LoadBalancerFrontPort": {
      "type": "int"
    },
    "LoadBalancerBackendPort": {
      "type": "int"
    },
    "LoadBalancerIdleTimeoutInMinutes": {
      "type": "int"
    },
    "LoadBalancerNameRuleName": {
      "type": "string"
    },
    "LoadBalancerProbeProtocol": {
      "type": "string"
    },
    "LoadBalancerProbePort": {
      "type": "int"
    },
    "LoadBalancerProbeIntervalInSeconds": {
      "type": "int"
    },
    "LoadBalancerNumberofProbes": {
      "type": "int"
    },
    "LoadBalancerProbeName": {
      "type": "string"
    },

    "_vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated from runbook"
      }
    },

    "_DSCagentSourceStorageAccountName": {
      "type": "securestring",
      "metadata": {
        "description": "Storageaccount name where the MOF file is stored"
      }
    },
    "_DSCagentSourceStorageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Key of storage account where MOF file is stored"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    },
    "CustomScriptExtensionScriptFileNameToRun": {
      "type": "string",
      "metadata": {
        "description": "Script file to run as custome script extension"
      }
    },
    "CustomScriptExtensionScriptAgentFileName": {
      "type": "string",
      "metadata": {
        "description": "Script file to download"
      }
    },
    "CustomScriptExtensionContainer": {
      "type": "string",
      "metadata": {
        "description": "Container name of CSE files"
      }
    },
    "DSCFile": {
      "type": "string",
      "metadata": {
        "description": "DSC file name"
      }
    },
    "ArtifactsStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "Storage account of artifacts, should be the same as the storage account of which SAS tokens was created"
      }
    },
    "MofContainerName": {
      "type": "string",
      "metadata": {
        "description": "Container name of MOF"
      }

    }


  },

  "variables": {
    "imagePublisher": "RedHat",
    "imageOffer": "RHEL",
    "imageSku": "[parameters('OSVersion')]",
    "DSCFileURL": "[concat('https://',parameters('ArtifactsStorageAccount'), '.blob.core.windows.net/',parameters('MofContainerName'),'/',parameters('DSCFile'))]",
    "CustomScriptExtensionScriptAgentFileNameURL": "[concat('https://',parameters('ArtifactsStorageAccount'), '.file.core.windows.net/',parameters('CustomScriptExtensionContainer'),'/',parameters('CustomScriptExtensionScriptAgentFileName'))]",
    "CustomScriptExtensionScriptFileNameToRunURL": "[concat('https://',parameters('ArtifactsStorageAccount'), '.file.core.windows.net/',parameters('CustomScriptExtensionContainer'),'/',parameters('CustomScriptExtensionScriptFileNameToRun'))]",
    "vnetID": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('VirtualNetworkName'))]",
    "alwaysonvnetSubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('SubnetName'))]",
    "DiskArray": [
      {
        "name": "Datadisk1",
        "lun": 0,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineName'), 'datadisk1', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk2",
        "lun": 1,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineName'), 'datadisk2', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk3",
        "lun": 2,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineName'), 'datadisk3', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk4",
        "lun": 3,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineName'), 'datadisk4', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk5",
        "lun": 4,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineName'), 'datadisk5', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk6",
        "lun": 5,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineName'), 'datadisk6', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk7",
        "lun": 6,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineName'), 'datadisk7', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk8",
        "lun": 7,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineName'), 'datadisk8', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      }
    ]

  },

  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "name": "[parameters('loadBalancerName')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              },

              "privateIPAllocationMethod": "Dynamic"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],

        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/', parameters('LoadBalancerProbeName'))]"
              },
              "protocol": "[parameters('LoadBalancerProtocol')]",
              "frontendPort": "[parameters('LoadBalancerFrontPort')]",
              "backendPort": "[parameters('LoadBalancerBackendPort')]",
              "idleTimeoutInMinutes": "[parameters('LoadBalancerIdleTimeoutInMinutes')]"
            },
            "Name": "[parameters('LoadBalancerNameRuleName')]"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "[parameters('LoadBalancerProbeProtocol')]",
              "port": "[parameters('LoadBalancerProbePort')]",
              "intervalInSeconds": "[parameters('LoadBalancerProbeIntervalInSeconds')]",
              "numberOfProbes": "[parameters('LoadBalancerNumberofProbes')]"
            },
            "name": "[parameters('LoadBalancerProbeName')]"
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "name": "[parameters('AvailabilitysetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "AvailabilitysetName"
      },
      "properties": {}
    },
    {
      "name": "[parameters('StorageAccountNameFirst')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountNameFirst')]"
      },
      "properties": {
        "accountType": "[parameters('StorageAccountType')]"
      }
    },
    {
      "name": "[parameters('StorageAccountNameSecond')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountNameSecond')]"
      },
      "properties": {
        "accountType": "[parameters('StorageAccountType')]"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameFirst')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameSecond')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[string(parameters('VirtualMachineNameFirst'))]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameFirst'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNameFirst'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('AvailabilitysetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameFirst')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "datadisks": "[take(variables('diskArray'),parameters('numDataDisks'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameFirst'))]"
            }
          ]
        }
      }
      },
    {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[string(parameters('VirtualMachineNameSecond'))]",
        "location": "[parameters('Location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameSecond'))]",
          "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNameSecond'))]",
          "[concat('Microsoft.Compute/availabilitySets/', parameters('AvailabilitysetName'))]"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitysetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[parameters('VirtualMachineSize')]"
          },
          "osProfile": {
            "computerName": "[parameters('VirtualMachineNameSecond')]",
            "adminUsername": "[parameters('VMadminUsername')]",
            "adminPassword": "[parameters('_vmAdminPassword')]"
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('imageSku')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "osdisk",
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'osdisk', '.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage"
            },
            "datadisks": "[take(variables('diskArray'),parameters('numDataDisks'))]"
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameSecond'))]"
              }
            ]
          }
        }
      }
  ],
  "outputs": {

          }

        }
