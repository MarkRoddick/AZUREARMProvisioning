{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VMadminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "_vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated from runbook"
      }
    },
    "ClusterName": {
      "type": "string",
      "metadata": {
        "description": "ClusterPrefix for naming cluster resources"
      }
    },
    "ADComputerModificationGroup": {
      "type": "string",
      "metadata": {
        "description": "AD group for cluster"
      }
    },
    "DomainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "_domainUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "_domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "_SQLsvcaccountname": {
      "type": "securestring",
      "metadata": {
        "description": "SQL service account"
      }
    },
    "_SQLsvcaccountnamePassword": {
      "type": "securestring",
      "metadata": {
        "description": "SQL service account password"
      }
    },
    "OuPath": {
      "type": "string",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "ServiceAccountOUPath": {
      "type": "string",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for sql service account to be created. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "DomainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "VirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "VirtualMachineNameFirst": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNameSecond": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNameWitness": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNICNameFirst": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "VirtualMachineNICNameSecond": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "VirtualMachineNICNameWitness": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "Location": {
      "type": "string",
      "allowedValues": [
        "East Asia",
        "East US 2",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of Virtual machine"
      }
    },
    "StorageAccountNameFirst": {
      "type": "string",
      "metadata": {
        "description": "Name  for First Node storageaccount"
      }
    },
    "StorageAccountNameSecond": {
      "type": "string",
      "metadata": {
        "description": "Name of second Node storageaccount"
      }
    },
    "StorageAccountNameWitness": {
      "type": "string",
      "metadata": {
        "description": "Name of Witness storageaccount"
      }
    },
    "SizeOfDataDisksInGB": {
      "type": "string",
      "defaultValue": "1023",
      "allowedValues": [
        "128",
        "512",
        "1023"
      ],
      "metadata": {
        "description": "Size of datadisks"
      }
    },
    "DiskCaching": {
      "type": "string",
      "allowedValues": [
        "None",
        "ReadOnly",
        "ReadWrite"
      ]
    },
    "numDataDisks": {
      "type": "int",
      "maxValue": 16,
      "metadata": {
        "description": "This parameter allows the user to select the number of disks they want"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS"
      ]
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_DS12_v2",
      "metadata": {
        "description": "VMsize"
      }
    },
    "OSVersion": {
      "type": "string",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "AvailabilitysetName": {
      "type": "string",
      "minLength": 1
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Existing virtualNetworkName"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access DSC configurations"
      }
    },
    "LoadBalancerName": {
      "type": "string"
    },
    "LoadBalancerIP": {
      "type": "string"
    },
    "LoadBalancerNameRuleName": {
      "type": "string"
    },
    "LoadBalancerProbeName": {
      "type": "string"
    },
    "_DSCagentSourceStorageAccountName": {
      "type": "securestring",
      "metadata": {
        "description": "Storage account name of storage account with agents"
      }
    },
    "_DSCagentSourceStorageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Storage account key of storage account with agents"
      }
    },
    "StorageAccountSourcePath": {
      "type": "string",
      "metadata": {
        "description": "Storage path of agents"
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('VirtualNetworkName'))]",
    "alwaysonvnetSubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('SubnetName'))]",
    "ClusterVMWitnessSize": "Standard_A2_v2",
    "AlwaysonWitnessDSCFile": "https://stgazewpmgislsd075d38001.file.core.windows.net/azuredsc/CreateAlwaysonWitness.zip",
    "AlwaysonFirstDSCFile": "https://stgazewpmgislsd075d38001.file.core.windows.net/azuredsc/PrepareAlwaysOnSqlServer.zip",
    "AlwaysonSecondaryDSCFile": "https://stgazewpmgislsd075d38001.file.core.windows.net/azuredsc/CreateAlwaysOnCluster.zip",
    "sqlAlwaysOnFileSharePath": "[concat(parameters('ClusterName'),'-fsw')]",
    "workloadType": "GENERAL",
    "sqlAlwaysOnEPName": "[concat(parameters('ClusterName'),'-agep')]",
    "sqlAlwaysOnAGName1": "[concat(parameters('ClusterName'),'-ag1')]",
    "sqlAlwaysOnListener1": "[concat(parameters('ClusterName'),'-agl1')]",
    "DiskArrayFirst": [
      {
        "name": "Datadisk1",
        "lun": 0,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk1', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk2",
        "lun": 1,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk2', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk3",
        "lun": 2,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk3', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk4",
        "lun": 3,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk4', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk5",
        "lun": 4,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk5', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk6",
        "lun": 5,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk6', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk7",
        "lun": 6,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk7', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk8",
        "lun": 7,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk8', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk9",
        "lun": 8,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk9', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk10",
        "lun": 9,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk10', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk11",
        "lun": 10,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisK11', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk12",
        "lun": 11,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk12', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk13",
        "lun": 12,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadis13', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk14",
        "lun": 13,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk14', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk15",
        "lun": 14,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisK15', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk16",
        "lun": 15,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisK16', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      }
    ],
    "DiskArraySecond": [
      {
        "name": "Datadisk1",
        "lun": 0,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk1', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk2",
        "lun": 1,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk2', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk3",
        "lun": 2,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk3', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk4",
        "lun": 3,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk4', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk5",
        "lun": 4,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk5', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk6",
        "lun": 5,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk6', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk7",
        "lun": 6,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk7', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk8",
        "lun": 7,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk8', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk9",
        "lun": 8,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk9', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk10",
        "lun": 9,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk10', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk11",
        "lun": 10,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisK11', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk12",
        "lun": 11,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk12', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk13",
        "lun": 12,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadis13', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk14",
        "lun": 13,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk14', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk15",
        "lun": 14,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisK15', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk16",
        "lun": 15,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisK16', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      }
    ]
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('Location')]",
      "name": "[parameters('loadBalancerName')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('LoadBalancerIP')]",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "Name": "[variables('sqlAlwaysOnListener1')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/',parameters('LoadBalancerProbeName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 1433,
              "backendPort": 1433,
              "enableFloatingIP": true
            }

          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 59999,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            },
            "name": "[parameters('LoadBalancerProbeName')]"
          }
        ]
      },
      "type": "Microsoft.Network/loadBalancers"
    },
    {
      "name": "[parameters('AvailabilitysetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('AvailabilitysetName')]"
      },
      "properties": {}
    },
    {
      "name": "[parameters('StorageAccountNameFirst')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountNameFirst')]"
      },
      "properties": {
        "accountType": "Premium_LRS"
      }
    },
    {
      "name": "[parameters('StorageAccountNameSecond')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountNameSecond')]"
      },
      "properties": {
        "accountType": "Premium_LRS"
      }
    },
    {
      "name": "[parameters('StorageAccountNameWitness')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountNameWitness')]"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameFirst')]",
      "dependsOn": [ "[resourceId('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]" ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameSecond')]",
      "dependsOn": [ "[resourceId('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]" ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameWitness')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('VirtualMachineNameFirst')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameFirst'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNameFirst'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitysetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitysetName'))]"
        },
        "licenseType": "Windows_Server",
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameFirst')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountNameFirst'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": "[take(variables('diskArrayFirst'),parameters('numDataDisks'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameFirst'))]"
            }
          ]
        }      
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameFirst'))]"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameFirst'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedsettings": {
              "Password": "[parameters('_domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[concat(parameters('domainToJoin'),'\\',parameters('_domainUsername'))]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('VirtualMachineNameSecond')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameFirst'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNameSecond'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitysetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameSecond')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountNameSecond'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": "[take(variables('diskArraySecond'),parameters('numDataDisks'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameSecond'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameSecond'))]"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameSecond'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedsettings": {
              "Password": "[parameters('_domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[concat(parameters('domainToJoin'),'\\',parameters('_domainUsername'))]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3"
          }
        }
      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('VirtualMachineNameWitness')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameWitness'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNameWitness'))]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitysetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('AvailabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('ClusterVMWitnessSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameWitness')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2012-R2-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountNameWitness'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameWitness'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameWitness'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameWitness'))]"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameWitness'),'/joindomain')]",
          "location": "[parameters('Location')]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedsettings": {
              "Password": "[parameters('_domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[concat(parameters('domainToJoin'),'\\',parameters('_domainUsername'))]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3"
          }
        }
      ]
    } 
  ],
  "outputs": {

} }
