{"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "DomainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "_domainUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "_domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "OuPath": {
      "type": "string",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "DomainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "VirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "VirtualMachineNamePrimary": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNameSecondary": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNameWitness": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNICNamePrimary": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "VirtualMachineNICNameSecondary": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "VirtualMachineNICNameWitness": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "Location": {
      "type": "string",
      "allowedValues": [
        "East Asia",
        "East US 2",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of Virtual machine"
      }
    },
    "StorageAccountNamePrem": {
      "type": "string",
      "metadata": {
        "description": "Name  for storageaccount"
      }
    },
    "StorageAccountNameStd": {
      "type": "string",
      "metadata": {
        "description": "Name of second storageaccount"
      }
    },
    "VMadminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine"
      }
    },
    "_vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated from runbook"
      }
    },
    "OSVersion": {
      "type": "string",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Existing virtualNetworkName"
      }
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "VMsize"
      }
    },
    "VirtualMachineIPPrimary": {
      "type": "string"
    },
    "VirtualMachineIPSecondary": {
      "type": "string"
    },
    "VirtualMachineIPWitness": {
      "type": "string"
    },    
    "DSCFile": {
      "type": "string",
      "metadata": {
        "description": "Location of base DSC file"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access DSC configurations"
      }
    },
    "DesiredStateBaseUpdateTagVersion": {
      "type": "string",
      "defaultValue": "1.0",
      "metadata": {
        "description": "This value must be changed from a previous deployment to ensure the extension will run"
      }
    },
    "_azureDSCregistrationKey": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated from runbook"
      }
    },
    "RegistrationUrl": {
      "type": "string",
      "metadata": {
        "description": "Registration url of the Azure Automation DSC pull/reporting server"
      }
    },
    "NodeConfigurationName": {
      "type": "string",
      "metadata": {
        "description": "The name of the node configuration, on the Azure Automation DSC pull server, that this node will be configured as"
      }
    },
    "ConfigurationMode": {
      "type": "string",
      "defaultValue": "ApplyAndMonitor",
      "allowedValues": [
        "ApplyOnly",
        "ApplyAndMonitor",
        "ApplyAndAutoCorrect"
      ],
      "metadata": {
        "description": "DSC agent (LCM) configuration mode setting. ApplyOnly, ApplyAndMonitor, or ApplyAndAutoCorrect"
      }
    },
    "ConfigurationFunction": {
      "type": "string",
      "defaultValue": "DesiredStateOnboardAA.ps1\\ConfigureLCMforAAPull",
      "metadata": {
        "description": "DSC configuration function to call. Should contain filename and function in format fileName.ps1\\configurationfunction"
      }
    },

    "ConfigurationModeFrequencyMins": {
      "type": "int",
      "defaultValue": 15,
      "metadata": {
        "description": "DSC agent (LCM) configuration mode frequency setting, in minutes"
      }
    },
    "RefreshFrequencyMins": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "DSC agent (LCM) refresh frequency setting, in minutes"
      }
    },
    "RebootNodeIfNeeded": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "DSC agent (LCM) rebootNodeIfNeeded setting"
      }
    },
    "ActionAfterReboot": {
      "type": "string",
      "defaultValue": "ContinueConfiguration",
      "allowedValues": [
        "ContinueConfiguration",
        "StopConfiguration"
      ],
      "metadata": {
        "description": "DSC agent (LCM) actionAfterReboot setting. ContinueConfiguration or StopConfiguration"
      }
    },
    "AllowModuleOverwrite": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "DSC agent (LCM) allowModuleOverwrite setting"
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('VirtualNetworkName'))]",
    "alwaysonvnetSubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('SubnetName'))]",
    "SizeOfDataDisksInGB": "1023",
    "DiskCachingPrem": "none",
    "DiskCachingStd": "none" 


  },

  "resources": [
    {
      "name": "[parameters('StorageAccountNamePrem')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountNamePrem')]"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "name": "[parameters('StorageAccountNameStd')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountNameStd')]"
      },
      "properties": {
        "accountType": "Premium_LRS"
      }
    },



    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNamePrimary')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('VirtualMachineIPPrimary')]",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },

    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameSecondary')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('VirtualMachineIPSecondary')]",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },

    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameWitness')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig3",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('VirtualMachineIPWitness')]",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }
            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },


    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[string(parameters('VirtualMachineNamePrimary'))]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNamePrimary'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNamePrem'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNameStd'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNamePrimary')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "DatadiskPrem1",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNamePrem'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'datadiskprem1', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingPrem')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskPrem2",
              "lun": 1,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNamePrem'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'datadiskprem2', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingPrem')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskPrem3",
              "lun": 2,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNamePrem'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'datadiskprem3', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingPrem')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskPrem4",
              "lun": 3,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNamePrem'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'datadiskprem4', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingPrem')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskStd1",
              "lun": 4,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'datadiskstd1', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingStd')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskStd2",
              "lun": 5,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'datadiskstd2', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingStd')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskStd3",
              "lun": 6,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'datadiskstd3', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingStd')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskStd4",
              "lun": 7,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNamePrimary'), 'datadiskstd4', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingStd')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            }
          ]

        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNamePrimary'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNamePrimary'))]"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNamePrimary'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedsettings": {
              "Password": "[parameters('_domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[parameters('_domainUsername')]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3"
          }
        },
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[parameters('Location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', string(parameters('VirtualMachineNamePrimary')))]"
          ],
          "tags": {
            "displayName": "DesiredStateBase"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[parameters('DesiredStateBaseUpdateTagVersion')]",
            "settings": {
              "ModulesUrl": "[parameters('DSCFile')]",
              "ConfigurationFunction": "[parameters('ConfigurationFunction')]",
              "SASToken": "[parameters('_artifactsLocationSasToken')]",
              "Properties": [
                {
                  "Name": "RegistrationKey",
                  "Value": {
                    "UserName": "PLACEHOLDER_DONOTUSE",
                    "Password": "PrivateSettingsRef:registrationKeyPrivate"
                  },
                  "TypeName": "System.Management.Automation.PSCredential"
                },
                {
                  "Name": "RegistrationUrl",
                  "Value": "[parameters('RegistrationUrl')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ComputerName",
                  "Value": "[parameters('VirtualMachineNamePrimary')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "NodeConfigurationName",
                  "Value": "[parameters('NodeConfigurationName')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationMode",
                  "Value": "[parameters('ConfigurationMode')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationModeFrequencyMins",
                  "Value": "[parameters('ConfigurationModeFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RefreshFrequencyMins",
                  "Value": "[parameters('RefreshFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RebootNodeIfNeeded",
                  "Value": "[parameters('RebootNodeIfNeeded')]",
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "ActionAfterReboot",
                  "Value": "[parameters('ActionAfterReboot')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "AllowModuleOverwrite",
                  "Value": "[parameters('AllowModuleOverwrite')]",
                  "TypeName": "System.Boolean"
                }
              ]

            },
            "protectedSettings": {
              "Items": {
                "registrationKeyPrivate": "[parameters('_azureDSCregistrationKey')]"
              }

            }
          }
        }



      ]
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[string(parameters('VirtualMachineNameSecondary'))]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNamePrimary'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNamePrem'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNameStd'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameSecondary')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "DatadiskPrem1",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNamePrem'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'datadiskprem1', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingPrem')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskPrem2",
              "lun": 1,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNamePrem'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'datadiskprem2', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingPrem')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskPrem3",
              "lun": 2,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNamePrem'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'datadiskprem3', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingPrem')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskPrem4",
              "lun": 3,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNamePrem'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'datadiskprem4', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingPrem')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskStd1",
              "lun": 4,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'datadiskstd1', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingStd')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskStd2",
              "lun": 5,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'datadiskstd2', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingStd')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskStd3",
              "lun": 6,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'datadiskstd3', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingStd')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            },
            {
              "name": "DatadiskStd4",
              "lun": 7,
              "vhd": {
                "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecondary'), 'datadiskstd4', '.vhd')]"
              },
              "createOption": "Empty",
              "caching": "[variables('DiskCachingStd')]",
              "diskSizeGB": "[variables('SizeOfDataDisksInGB')]"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameSecondary'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameSecondary'))]"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameSecondary'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedsettings": {
              "Password": "[parameters('_domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[parameters('_domainUsername')]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3"
          }
        },
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[parameters('Location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', string(parameters('VirtualMachineNameSecondary')))]"
          ],
          "tags": {
            "displayName": "DesiredStateBase"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[parameters('DesiredStateBaseUpdateTagVersion')]",
            "settings": {
              "ModulesUrl": "[parameters('DSCFile')]",
              "ConfigurationFunction": "[parameters('ConfigurationFunction')]",
              "SASToken": "[parameters('_artifactsLocationSasToken')]",
              "Properties": [
                {
                  "Name": "RegistrationKey",
                  "Value": {
                    "UserName": "PLACEHOLDER_DONOTUSE",
                    "Password": "PrivateSettingsRef:registrationKeyPrivate"
                  },
                  "TypeName": "System.Management.Automation.PSCredential"
                },
                {
                  "Name": "RegistrationUrl",
                  "Value": "[parameters('RegistrationUrl')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ComputerName",
                  "Value": "[parameters('VirtualMachineNameSecondary')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "NodeConfigurationName",
                  "Value": "[parameters('NodeConfigurationName')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationMode",
                  "Value": "[parameters('ConfigurationMode')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationModeFrequencyMins",
                  "Value": "[parameters('ConfigurationModeFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RefreshFrequencyMins",
                  "Value": "[parameters('RefreshFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RebootNodeIfNeeded",
                  "Value": "[parameters('RebootNodeIfNeeded')]",
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "ActionAfterReboot",
                  "Value": "[parameters('ActionAfterReboot')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "AllowModuleOverwrite",
                  "Value": "[parameters('AllowModuleOverwrite')]",
                  "TypeName": "System.Boolean"
                }
              ]

            },
            "protectedSettings": {
              "Items": {
                "registrationKeyPrivate": "[parameters('_azureDSCregistrationKey')]"
              }

            }
          }
        }



      ]
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[string(parameters('VirtualMachineNameWitness'))]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameWitness'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountNameStd'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameWitness')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountNameStd'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameWitness'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameWitness'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameWitness'))]"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameWitness'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedsettings": {
              "Password": "[parameters('_domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[parameters('_domainUsername')]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3"
          }
        },
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[parameters('Location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', string(parameters('VirtualMachineNameWitness')))]"
          ],
          "tags": {
            "displayName": "DesiredStateBase"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[parameters('DesiredStateBaseUpdateTagVersion')]",
            "settings": {
              "ModulesUrl": "[parameters('DSCFile')]",
              "ConfigurationFunction": "[parameters('ConfigurationFunction')]",
              "SASToken": "[parameters('_artifactsLocationSasToken')]",
              "Properties": [
                {
                  "Name": "RegistrationKey",
                  "Value": {
                    "UserName": "PLACEHOLDER_DONOTUSE",
                    "Password": "PrivateSettingsRef:registrationKeyPrivate"
                  },
                  "TypeName": "System.Management.Automation.PSCredential"
                },
                {
                  "Name": "RegistrationUrl",
                  "Value": "[parameters('RegistrationUrl')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ComputerName",
                  "Value": "[parameters('VirtualMachineNameWitness')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "NodeConfigurationName",
                  "Value": "[parameters('NodeConfigurationName')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationMode",
                  "Value": "[parameters('ConfigurationMode')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationModeFrequencyMins",
                  "Value": "[parameters('ConfigurationModeFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RefreshFrequencyMins",
                  "Value": "[parameters('RefreshFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RebootNodeIfNeeded",
                  "Value": "[parameters('RebootNodeIfNeeded')]",
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "ActionAfterReboot",
                  "Value": "[parameters('ActionAfterReboot')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "AllowModuleOverwrite",
                  "Value": "[parameters('AllowModuleOverwrite')]",
                  "TypeName": "System.Boolean"
                }
              ]

            },
            "protectedSettings": {
              "Items": {
                "registrationKeyPrivate": "[parameters('_azureDSCregistrationKey')]"
              }

            }
          }
        }



      ]
    }




  ],
  "outputs": {

  }

}
