{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "DomainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "_domainUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "_domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "OuPath": {
      "type": "string",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "DomainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "VirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "VirtualMachineNameFirst": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNameSecond": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNICNameFirst": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "VirtualMachineNICNameSecond": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "Location": {
      "type": "string",
      "allowedValues": [
        "East Asia",
        "East US 2",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of Virtual machine"
      }
    },
    "StorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name  for storageaccount."
      }
    },
    "VMadminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "_vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated from runbook"
      }
    },
    "OSVersion": {
      "type": "string",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Existing virtualNetworkName"
      }
    },
    "SizeOfDataDisksInGB": {
      "type": "string",
      "defaultValue": "1023",
      "allowedValues": [
        "512",
        "1023"
      ],
      "metadata": {
        "description": "Size of datadisks"
      }
    },
    "DiskCaching": {
      "type": "string",
      "allowedValues": [
        "None",
        "ReadOnly",
        "ReadWrite"
      ]
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "VMsize"
      }
    },
    "numDataDisksFirst": {
      "type": "int",
      "maxValue": 4,
      "metadata": {
        "description": "This parameter allows the user to select the number of disks they want"
      }
    },
    "numDataDisksSecond": {
      "type": "int",
      "maxValue": 4,
      "metadata": {
        "description": "This parameter allows the user to select the number of disks they want"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "DSCFile": {
      "type": "string",
      "metadata": {
        "description": "Location of base DSC file"
      }
    },
    "_DSCagentSourceStorageAccountName": {
      "type": "securestring",
      "metadata": {
        "description": "Storage account name of storage account with agents"
      }
    },
    "_DSCagentSourceStorageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Storage account key of storage account with agents"
      }
    },
    "StorageAccountSourcePath": {
      "type": "string",
      "metadata": {
        "description": "Storage path of agents"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access DSC configurations"
      }
    },
    "AvailabilitysetName": {
      "type": "string",
      "minLength": 1
    },
    "LoadBalancerName": {
      "type": "string"
    },
    "LoadBalancerProtocol": {
      "type": "string"
    },
    "LoadBalancerFrontPort": {
      "type": "int"
    },
    "LoadBalancerBackendPort": {
      "type": "int"
    },
    "LoadBalancerIdleTimeoutInMinutes": {
      "type": "int"
    },
    "LoadBalancerNameRuleName": {
      "type": "string"
    },
    "LoadBalancerProbeProtocol": {
      "type": "string"
    },
    "LoadBalancerProbePort": {
      "type": "int"
    },
    "LoadBalancerProbeIntervalInSeconds": {
      "type": "int"
    },
    "LoadBalancerNumberofProbes": {
      "type": "int"
    },
    "LoadBalancerProbeName": {
      "type": "string"
    }
  },
  "variables": {
    "vnetID": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('VirtualNetworkName'))]",
    "alwaysonvnetSubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('SubnetName'))]",
    "DiskArrayFirst": [
      {
        "name": "Datadisk1",
        "lun": 0,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk1', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk2",
        "lun": 1,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk2', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk3",
        "lun": 2,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk3', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk4",
        "lun": 3,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk4', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      }

    ],
    "DiskArraySecond": [
      {
        "name": "Datadisk21",
        "lun": 0,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk1', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk22",
        "lun": 1,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk2', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk23",
        "lun": 2,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk3', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk24",
        "lun": 3,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk4', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      }

    ]

  },

  "resources": [

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              },

              "privateIPAllocationMethod": "Dynamic"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],

        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/', parameters('LoadBalancerProbeName'))]"
              },
              "protocol": "[parameters('LoadBalancerProtocol')]",
              "frontendPort": "[parameters('LoadBalancerFrontPort')]",
              "backendPort": "[parameters('LoadBalancerBackendPort')]",
              "idleTimeoutInMinutes": "[parameters('LoadBalancerIdleTimeoutInMinutes')]"
            },
            "Name": "[parameters('LoadBalancerNameRuleName')]"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "[parameters('LoadBalancerProbeProtocol')]",
              "port": "[parameters('LoadBalancerProbePort')]",
              "intervalInSeconds": "[parameters('LoadBalancerProbeIntervalInSeconds')]",
              "numberOfProbes": "[parameters('LoadBalancerNumberofProbes')]"
            },
            "name": "[parameters('LoadBalancerProbeName')]"
          }
        ]
      }
    },
    {
      "name": "[parameters('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountName')]"
      },
      "properties": {
        "accountType": "[parameters('StorageAccountType')]"
      }
    },

    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameFirst')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }

            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameSecond')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }

            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[string(parameters('VirtualMachineNameFirst'))]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameFirst'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('AvailabilitysetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('AvailabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameFirst')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "datadisks": "[take(variables('DiskArrayFirst'),parameters('numDataDisksFirst'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameFirst'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameFirst'))]"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameFirst'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedsettings": {
              "Password": "[parameters('_domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[concat(parameters('domainToJoin'),'\\',parameters('_domainUsername'))]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3"
          }
        },
        {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameFirst'),'/BaseWindowsConfiguration')]",
          "location": "[parameters('Location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameFirst'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.17",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "5.0",
              "modulesUrl": "[parameters('DSCFile')]",
              "configurationFunction": "BaseWindowsInstallation.ps1\\BaseWindowsInstallation",
              "SASToken": "[parameters('_artifactsLocationSasToken')]",
              "properties": {
                "StorageAccountSourcePath": "[parameters('StorageAccountSourcePath')]",
                "AutomationAccountStorageCredential": {
                  "userName": "[parameters('_DSCagentSourceStorageAccountName')]",
                  "password": "PrivateSettingsRef:AutomationAccountPass"
                }
              }
            },
            "protectedSettings": {
              "items": {
                "AutomationAccountPass": "[parameters('_DSCagentSourceStorageAccountKey')]"
              }
            }
          }
        }

      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[string(parameters('VirtualMachineNameSecond'))]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameSecond'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('AvailabilitysetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('AvailabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameSecond')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "datadisks": "[take(variables('DiskArraySecond'),parameters('numDataDisksSecond'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameSecond'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameSecond'))]"
          ],
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameSecond'),'/joindomain')]",
          "location": "[resourceGroup().location]",
          "properties": {
            "autoUpgradeMinorVersion": true,
            "protectedsettings": {
              "Password": "[parameters('_domainPassword')]"
            },
            "publisher": "Microsoft.Compute",
            "settings": {
              "Name": "[parameters('domainToJoin')]",
              "OUPath": "[parameters('ouPath')]",
              "User": "[concat(parameters('domainToJoin'),'\\',parameters('_domainUsername'))]",
              "Restart": "true",
              "Options": "[parameters('domainJoinOptions')]"
            },
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3"
          }
        },
        {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(parameters('VirtualMachineNameSecond'),'/BaseWindowsConfiguration')]",
          "location": "[parameters('Location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('VirtualMachineNameSecond'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.17",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "wmfVersion": "5.0",
              "modulesUrl": "[parameters('DSCFile')]",
              "configurationFunction": "BaseWindowsInstallation.ps1\\BaseWindowsInstallation",
              "SASToken": "[parameters('_artifactsLocationSasToken')]",
              "properties": {
                "StorageAccountSourcePath": "[parameters('StorageAccountSourcePath')]",
                "AutomationAccountStorageCredential": {
                  "userName": "[parameters('_DSCagentSourceStorageAccountName')]",
                  "password": "PrivateSettingsRef:AutomationAccountPass"
                }
              }
            },
            "protectedSettings": {
              "items": {
                "AutomationAccountPass": "[parameters('_DSCagentSourceStorageAccountKey')]"
              }
            }
          }
        }

      ]
    },

    {
      "name": "[parameters('AvailabilitysetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "AvailabilitysetName"
      },
      "properties": {}
    }
  ],
  "outputs": {

  }

}
