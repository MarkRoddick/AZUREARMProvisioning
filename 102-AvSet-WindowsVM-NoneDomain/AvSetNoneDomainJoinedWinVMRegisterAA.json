{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "VirtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "VirtualMachineNameFirst": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNameSecond": {
      "type": "string",
      "Metadata": {
        "description": "Virtual Machine Name"
      }
    },
    "VirtualMachineNICNameFirst": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "VirtualMachineNICNameSecond": {
      "type": "string",
      "Metadata": {
        "description": "Name of VM NIC"
      }
    },
    "Location": {
      "type": "string",
      "allowedValues": [
        "East Asia",
        "East US 2",
        "West Europe"
      ],
      "metadata": {
        "description": "Location of Virtual machine"
      }
    },
    "StorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name  for storageaccount."
      }
    },
    "VMadminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "_vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated from runbook"
      }
    },
    "OSVersion": {
      "type": "string",
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "SubnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet Name"
      }
    },
    "VirtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Existing virtualNetworkName"
      }
    },
    "SizeOfDataDisksInGB": {
      "type": "string",
      "defaultValue": "1023",
      "allowedValues": [
        "512",
        "1023"
      ],
      "metadata": {
        "description": "Size of datadisks"
      }
    },
    "DiskCaching": {
      "type": "string",
      "allowedValues": [
        "None",
        "ReadOnly",
        "ReadWrite"
      ]
    },
    "VirtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "VMsize"
      }
    },
    "numDataDisksFirst": {
      "type": "int",
      "maxValue": 4,
      "metadata": {
        "description": "This parameter allows the user to select the number of disks they want"
      }
    },
    "numDataDisksSecond": {
      "type": "int",
      "maxValue": 4,
      "metadata": {
        "description": "This parameter allows the user to select the number of disks they want"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "DSCFile": {
      "type": "string",
      "metadata": {
        "description": "Location of base DSC file"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access DSC configurations"
      }
    },
    "DesiredStateBaseUpdateTagVersion": {
      "type": "string",
      "defaultValue": "1.0",
      "metadata": {
        "description": "This value must be changed from a previous deployment to ensure the extension will run"
      }
    },
    "_azureDSCregistrationKey": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated from runbook"
      }
    },
    "RegistrationUrl": {
      "type": "string",
      "metadata": {
        "description": "Registration url of the Azure Automation DSC pull/reporting server"
      }
    },
    "NodeConfigurationName": {
      "type": "string",
      "metadata": {
        "description": "The name of the node configuration, on the Azure Automation DSC pull server, that this node will be configured as"
      }
    },
    "ConfigurationMode": {
      "type": "string",
      "defaultValue": "ApplyAndMonitor",
      "allowedValues": [
        "ApplyOnly",
        "ApplyAndMonitor",
        "ApplyAndAutoCorrect"
      ],
      "metadata": {
        "description": "DSC agent (LCM) configuration mode setting. ApplyOnly, ApplyAndMonitor, or ApplyAndAutoCorrect"
      }
    },
    "ConfigurationFunction": {
      "type": "string",
      "defaultValue": "DesiredStateOnboardAA.ps1\\ConfigureLCMforAAPull",
      "metadata": {
        "description": "DSC configuration function to call. Should contain filename and function in format fileName.ps1\\configurationfunction"
      }
    },

    "ConfigurationModeFrequencyMins": {
      "type": "int",
      "defaultValue": 15,
      "metadata": {
        "description": "DSC agent (LCM) configuration mode frequency setting, in minutes"
      }
    },
    "RefreshFrequencyMins": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "DSC agent (LCM) refresh frequency setting, in minutes"
      }
    },
    "RebootNodeIfNeeded": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "DSC agent (LCM) rebootNodeIfNeeded setting"
      }
    },
    "ActionAfterReboot": {
      "type": "string",
      "defaultValue": "ContinueConfiguration",
      "allowedValues": [
        "ContinueConfiguration",
        "StopConfiguration"
      ],
      "metadata": {
        "description": "DSC agent (LCM) actionAfterReboot setting. ContinueConfiguration or StopConfiguration"
      }
    },
    "AllowModuleOverwrite": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "DSC agent (LCM) allowModuleOverwrite setting"
      }
    },
    "AvailabilitysetName": {
      "type": "string",
      "minLength": 1
    },
    "LoadBalancerName": {
      "type": "string"
    }
  },
  "variables": {
    "vnetID": "[resourceId(parameters('VirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('VirtualNetworkName'))]",
    "alwaysonvnetSubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('SubnetName'))]",
    "DiskArrayFirst": [
      {
        "name": "Datadisk1",
        "lun": 0,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk1', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk2",
        "lun": 1,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk2', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk3",
        "lun": 2,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk3', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk4",
        "lun": 3,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'datadisk4', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      }

    ],
    "DiskArraySecond": [
      {
        "name": "Datadisk21",
        "lun": 0,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk1', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk22",
        "lun": 1,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk2', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk23",
        "lun": 2,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk3', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      },
      {
        "name": "Datadisk24",
        "lun": 3,
        "vhd": {
          "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'datadisk4', '.vhd')]"
        },
        "createOption": "Empty",
        "caching": "[parameters('diskCaching')]",
        "diskSizeGB": "[parameters('sizeOfDataDisksInGB')]"
      }

    ]


  },

  "resources": [
    
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              },

              "privateIPAllocationMethod": "Dynamic"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "Name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "name": "[parameters('StorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('Location')]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('StorageAccountName')]"
      },
      "properties": {
        "accountType": "[parameters('StorageAccountType')]"
      }
    },

    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameFirst')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }

            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "name": "[parameters('VirtualMachineNICNameSecond')]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]" 
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig2",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('alwaysonvnetSubnetRef')]"
              }

            }
          }
        ]
      },
      "type": "Microsoft.Network/networkInterfaces"
    },

    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[string(parameters('VirtualMachineNameFirst'))]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameFirst'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('AvailabilitysetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('AvailabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameFirst')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameFirst'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "datadisks": "[take(variables('DiskArrayFirst'),parameters('numDataDisksFirst'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameFirst'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[parameters('Location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', string(parameters('VirtualMachineNameFirst')))]"
          ],
          "tags": {
            "displayName": "DesiredStateBase"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[parameters('DesiredStateBaseUpdateTagVersion')]",
            "settings": {
              "ModulesUrl": "[parameters('DSCFile')]",
              "ConfigurationFunction": "[parameters('ConfigurationFunction')]",
              "SASToken": "[parameters('_artifactsLocationSasToken')]",
              "Properties": [
                {
                  "Name": "RegistrationKey",
                  "Value": {
                    "UserName": "PLACEHOLDER_DONOTUSE",
                    "Password": "PrivateSettingsRef:registrationKeyPrivate"
                  },
                  "TypeName": "System.Management.Automation.PSCredential"
                },
                {
                  "Name": "RegistrationUrl",
                  "Value": "[parameters('RegistrationUrl')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ComputerName",
                  "Value": "[parameters('VirtualMachineNameFirst')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "NodeConfigurationName",
                  "Value": "[parameters('NodeConfigurationName')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationMode",
                  "Value": "[parameters('ConfigurationMode')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationModeFrequencyMins",
                  "Value": "[parameters('ConfigurationModeFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RefreshFrequencyMins",
                  "Value": "[parameters('RefreshFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RebootNodeIfNeeded",
                  "Value": "[parameters('RebootNodeIfNeeded')]",
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "ActionAfterReboot",
                  "Value": "[parameters('ActionAfterReboot')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "AllowModuleOverwrite",
                  "Value": "[parameters('AllowModuleOverwrite')]",
                  "TypeName": "System.Boolean"
                }
              ]

            },
            "protectedSettings": {
              "Items": {
                "registrationKeyPrivate": "[parameters('_azureDSCregistrationKey')]"
              }

            }
          }
        }

      ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[string(parameters('VirtualMachineNameSecond'))]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/',parameters('VirtualMachineNICNameSecond'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/',parameters('StorageAccountName'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('AvailabilitysetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('AvailabilitysetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('VirtualMachineSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VirtualMachineNameSecond')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "[parameters('_vmAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', parameters('StorageAccountName'), '.blob.core.windows.net/', 'vhds/', parameters('VirtualMachineNameSecond'), 'osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "datadisks": "[take(variables('DiskArraySecond'),parameters('numDataDisksSecond'))]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',parameters('VirtualMachineNICNameSecond'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "Microsoft.Powershell.DSC",
          "type": "extensions",
          "location": "[parameters('Location')]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', string(parameters('VirtualMachineNameSecond')))]"
          ],
          "tags": {
            "displayName": "DesiredStateBase"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "forceUpdateTag": "[parameters('DesiredStateBaseUpdateTagVersion')]",
            "settings": {
              "ModulesUrl": "[parameters('DSCFile')]",
              "ConfigurationFunction": "[parameters('ConfigurationFunction')]",
              "SASToken": "[parameters('_artifactsLocationSasToken')]",
              "Properties": [
                {
                  "Name": "RegistrationKey",
                  "Value": {
                    "UserName": "PLACEHOLDER_DONOTUSE",
                    "Password": "PrivateSettingsRef:registrationKeyPrivate"
                  },
                  "TypeName": "System.Management.Automation.PSCredential"
                },
                {
                  "Name": "RegistrationUrl",
                  "Value": "[parameters('RegistrationUrl')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ComputerName",
                  "Value": "[parameters('VirtualMachineNameSecond')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "NodeConfigurationName",
                  "Value": "[parameters('NodeConfigurationName')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationMode",
                  "Value": "[parameters('ConfigurationMode')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "ConfigurationModeFrequencyMins",
                  "Value": "[parameters('ConfigurationModeFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RefreshFrequencyMins",
                  "Value": "[parameters('RefreshFrequencyMins')]",
                  "TypeName": "System.Int32"
                },
                {
                  "Name": "RebootNodeIfNeeded",
                  "Value": "[parameters('RebootNodeIfNeeded')]",
                  "TypeName": "System.Boolean"
                },
                {
                  "Name": "ActionAfterReboot",
                  "Value": "[parameters('ActionAfterReboot')]",
                  "TypeName": "System.String"
                },
                {
                  "Name": "AllowModuleOverwrite",
                  "Value": "[parameters('AllowModuleOverwrite')]",
                  "TypeName": "System.Boolean"
                }
              ]

            },
            "protectedSettings": {
              "Items": {
                "registrationKeyPrivate": "[parameters('_azureDSCregistrationKey')]"
              }

            }
          }
        }

      ]
    },

    {
      "name": "[parameters('AvailabilitysetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "AvailabilitysetName"
      },
      "properties": {}
    }
  ],
  "outputs": {

  }

}